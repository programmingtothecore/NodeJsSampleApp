name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASS }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_USERNAME }}/samplenodeapp:latest
          ${{ env.DOCKER_USERNAME }}/samplenodeapp:${{ github.sha }}

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Configure Kubernetes Context
      run: |
        echo "${{ secrets.KUBECONFIG_CONTENT }}" > kubeconfig.yaml
        export KUBECONFIG=$PWD/kubeconfig.yaml

    - name: Deploy to Kubernetes
      run: |
        # Apply manifests
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml
        kubectl apply -f kubernetes/hpa.yaml
        
        # Wait for rollout
        kubectl rollout status deployment/samplenodeapp

    - name: Verify Deployment
      run: |
        kubectl get pods -l app=samplenodeapp
        kubectl get svc samplenodeapp-service
        kubectl get hpa samplenodeapp-hpa

    - name: Rollback on Failure
      if: failure()
      run: |
        kubectl rollout undo deployment/samplenodeapp
        kubectl rollout status deployment/samplenodeapp